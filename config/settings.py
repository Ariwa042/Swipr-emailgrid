"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 4.2.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-#)fe^y=_c4n2f#7u9w2f6^dmynu_o(59wz@qhvaz&+(0lebzyx'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*', 'https://emailgrid.onrender.com', 'emailgrid.onrender.com']


# CSRF trusted origins (for deployment, e.g. Render, custom domains)
CSRF_TRUSTED_ORIGINS = [
    'https://emailgrid.onrender.com',
    'https://www.emailgrid.onrender.com',
]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    # Local apps
    'accounts',
    'core',
    'payments',
    # Third-party
    'corsheaders',
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'config.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'config.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = 'static/'
STATIC_ROOT = BASE_DIR / 'staticfiles'
STATICFILES_DIRS = [BASE_DIR / 'static']

# Media files (User uploaded files)
MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Custom User Model
AUTH_USER_MODEL = 'accounts.CustomUser'

# Authentication settings
LOGIN_URL = 'accounts:login'
LOGIN_REDIRECT_URL = 'core:index'
LOGOUT_REDIRECT_URL = 'core:index'

# Email settings - for development (prints emails to console)
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'

# Add your public domain for building absolute URLs in emails
SITE_DOMAIN = 'https://emailgrid.onrender.com'

# Campaign email SMTP settings for different templates
CAMPAIGN_EMAIL_BACKENDS = {
    'binance_deposit': {
        'EMAIL_HOST': 'smtp.hostinger.com',
        'EMAIL_PORT': 465,
        'EMAIL_HOST_USER': 'mail@notifytxx.com',
        'EMAIL_HOST_PASSWORD': 'ZnfuK5m&',
        'EMAIL_USE_SSL': True,
        'DEFAULT_FROM_EMAIL': 'Binance <mail@notifytxx.com>',
    },
    'binance_unknown': {
        'EMAIL_HOST': 'smtp.hostinger.com',
        'EMAIL_PORT': 465,
        'EMAIL_HOST_USER': 'mail@notifytxx.com',
        'EMAIL_HOST_PASSWORD': 'ZnfuK5m&',
        'EMAIL_USE_SSL': True,
        'DEFAULT_FROM_EMAIL': 'Binance <mail@notifytxx.com>',
    },
    'bybit_deposit': {
        'EMAIL_HOST': 'smtp.hostinger.com',
        'EMAIL_PORT': 465,
        'EMAIL_HOST_USER': 'mail@notifytxx.com',
        'EMAIL_HOST_PASSWORD': 'ZnfuK5m&',
        'EMAIL_USE_SSL': True,
        'DEFAULT_FROM_EMAIL': 'Bybit <mail@notifytxx.com>',
    },
    'bybit_unknown': {
        'EMAIL_HOST': 'smtp.example.com',
        'EMAIL_PORT': 465,
        'EMAIL_HOST_USER': 'bybit@example.com',
        'EMAIL_HOST_PASSWORD': 'ZnfuK5m&',
        'EMAIL_USE_SSL': True,
        'DEFAULT_FROM_EMAIL': 'Bybit <mail@notifytxx.com>',
    },
    'bitpay_deposit': {
        'EMAIL_HOST': 'smtp.example.com',
        'EMAIL_PORT': 587,
        'EMAIL_HOST_USER': 'bitpay@example.com',
        'EMAIL_HOST_PASSWORD': 'your-password',
        'EMAIL_USE_TLS': True,
        'DEFAULT_FROM_EMAIL': 'BitPay <no-reply@bitpay.com>',
    },
    'bitpay_unknown': {
        'EMAIL_HOST': 'smtp.example.com',
        'EMAIL_PORT': 587,
        'EMAIL_HOST_USER': 'bitpay@example.com',
        'EMAIL_HOST_PASSWORD': 'your-password',
        'EMAIL_USE_TLS': True,
        'DEFAULT_FROM_EMAIL': 'BitPay <no-reply@bitpay.com>',
    },
}

# CORS settings
CORS_ALLOW_ALL_ORIGINS = False
CORS_ALLOWED_ORIGINS = [
    'https://emailgrid.onrender.com',
    'https://bitpay-account.onrender.com',
    'https://binance-accounts.onrender.com',
    'https://bybit-account.onrender.com',

    # Add your static site's domain here, e.g.:
    # 'https://your-static-site.com',
]

# NOWPayments Configuration
NOWPAYMENTS_API_KEY = 'VY9T8H5-5E2M3D1-KDB0P5X-72RKFGR'
NOWPAYMENTS_IPN_SECRET = 'MBNu2YxsyTM5wXX6HRkGUqMQPOwE0+2s'
NOWPAYMENTS_SANDBOX = False  # Set to False for production API

# Create logs directory if it doesn't exist
LOGS_DIR = BASE_DIR / 'logs'
LOGS_DIR.mkdir(exist_ok=True)

# Logging configuration
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '{levelname} {asctime} {module} {process:d} {thread:d} {message}',
            'style': '{',
        },
    },
    'handlers': {
        'file': {
            'level': 'INFO',
            'class': 'logging.FileHandler',
            'filename': LOGS_DIR / 'nowpayments.log',
            'formatter': 'verbose',
        },
        'console': {
            'level': 'INFO',
            'class': 'logging.StreamHandler',
            'formatter': 'verbose',
        },
    },
    'loggers': {
        'payments.nowpayments': {
            'handlers': ['file', 'console'],
            'level': 'INFO',
            'propagate': True,
        },
    },
}
